Этапы разработки
===========================
 1. Создание бота с помощью @BotFather

 2. Знакомство с возможностями библиотеки pyTelegramBotAPI в процессе создания прстого эхобота

 3. С помощью SQLite3 реализуется связь между ботом и хранимыми данными каждого пользователя бота. По рекомендации ментора, данный блок переделан с использованием SQLAlchemy

 4. Добавляется функционал бота в виде различных команд: добавление/удаление канала из базы данных и запрос списка каналов, в которые происходит перессылка сообщений

 5. Перессылка сообщений в каналы (необходимо добавить бота в админы):

  - Возникли трудности в перессылки сообщения от имени бота, поэтому создается временное сообщение от имени бота

  - Поиск других путей реализации данного блока с помощью других библиотек (Pyrogram, Telethon и Python-Telegram-Bot)

  - Задав уточняющие вопросы по заданию, стало понятно, что не требуется сохранять имя бота в перессылаемом сообщении, поэтому функция перессылки сообщения реализована с помощью отправления копии в канал. Данный функционнал удобно реализован в библиотеке Python-Telegram-Bot, так как отпадает необходимость повторять код для перессылки различных типов сообщений

 6. С помощью Python-Telegram-Bot добавленно логирование, чтобы следить за работой бота

 7. Тесты реализованы с помощью Telethon, Pytest и API telegram client. Возникли трудности с тем, что не получилось реализовать тестирование без ассинхроности
